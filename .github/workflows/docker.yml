name: Server
on:
  - push
  - pull_request

jobs:
  build-linux:
    name: Linux build
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-go@v2
        with:
          go-version: '^1.15'
      - name: Get current Go version
        run: go version
      - name: Get Go dependencies
        run: go mod download
      - name: Set env
        run: go env -w GOFLAGS=-mod=mod
      - name: Build app
        run: go build -v -o SMTP2-server main.go
      - uses: actions/upload-artifact@v2
        with:
          name: SMTP2-linux
          path: SMTP2-server
  build-windows:
    name: Windows build
    runs-on: windows-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-go@v2
        with:
          go-version: '^1.15'
      - name: Get current Go version
        run: go version
      - name: Get Go dependencies
        run: go mod download
      - name: Set env
        run: go env -w GOFLAGS=-mod=mod
      - name: Build app
        run: go build -v -o SMTP2-server.exe main.go
      - uses: actions/upload-artifact@v2
        with:
          name: SMTP2-windows.exe
          path: SMTP2-server.exe
  docker:
    name: Docker build
    if: startsWith(github.ref, 'refs/tags/')
    needs: build-linux
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Get Docker version
        run: docker --version
      - name: Docker Login
        uses: docker/login-action@v1
        with:
          username: ${{github.actor}}
          password: ${{secrets.GITHUB_TOKEN}}
          registry: "ghcr.io"
      - name: Get Docker meta
        id: meta
        uses: docker/metadata-action@v3
        with:
          images: ghcr.io/${{ github.repository }}/server
          tags: type=ref,event=tag
      - name: Build Docker image
        uses: docker/build-push-action@v2
        with:
          file: "./Dockerfile"
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          push: true